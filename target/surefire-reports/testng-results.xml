<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="13" passed="12">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="7756" started-at="2021-06-26T11:08:44 BST" finished-at="2021-06-26T11:08:52 BST">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="7756" started-at="2021-06-26T11:08:44 BST" finished-at="2021-06-26T11:08:52 BST">
      <class name="posts.PostTests">
        <test-method status="PASS" signature="getPostById()" name="getPostById" duration-ms="173" started-at="2021-06-26T11:08:52 BST" finished-at="2021-06-26T11:08:52 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostById -->
      </class> <!-- posts.PostTests -->
      <class name="pets.PetsTest">
        <test-method status="PASS" signature="getStoreInventory()" name="getStoreInventory" duration-ms="1215" started-at="2021-06-26T11:08:50 BST" finished-at="2021-06-26T11:08:52 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStoreInventory -->
        <test-method status="FAIL" signature="getOrdersInventory()" name="getOrdersInventory" duration-ms="674" started-at="2021-06-26T11:08:50 BST" finished-at="2021-06-26T11:08:51 BST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <200>
     but: was <404>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <200>
     but: was <404>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
at org.junit.Assert.assertThat(Assert.java:865)
at org.junit.Assert.assertThat(Assert.java:832)
at pets.PetsTest.getOrdersInventory(PetsTest.java:43)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
at org.testng.junit.JUnit4TestRunner.start(JUnit4TestRunner.java:74)
at org.testng.junit.JUnit4TestRunner.run(JUnit4TestRunner.java:65)
at org.testng.TestRunner$1.run(TestRunner.java:652)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.runJUnitWorkers(TestRunner.java:843)
at org.testng.TestRunner.privateRunJUnit(TestRunner.java:681)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:198)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOrdersInventory -->
      </class> <!-- pets.PetsTest -->
      <class name="vendingMachine.CoinFactoryTests">
        <test-method status="PASS" signature="it_creates_penny_coin_with_correct_name_and_value()" name="it_creates_penny_coin_with_correct_name_and_value" duration-ms="4" started-at="2021-06-26T11:08:52 BST" finished-at="2021-06-26T11:08:52 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- it_creates_penny_coin_with_correct_name_and_value -->
        <test-method status="PASS" signature="it_creates_dime_coin_with_correct_name_and_value()" name="it_creates_dime_coin_with_correct_name_and_value" duration-ms="3" started-at="2021-06-26T11:08:52 BST" finished-at="2021-06-26T11:08:52 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- it_creates_dime_coin_with_correct_name_and_value -->
        <test-method status="PASS" signature="it_creates_nickel_coin_with_correct_name_and_value()" name="it_creates_nickel_coin_with_correct_name_and_value" duration-ms="3" started-at="2021-06-26T11:08:52 BST" finished-at="2021-06-26T11:08:52 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- it_creates_nickel_coin_with_correct_name_and_value -->
      </class> <!-- vendingMachine.CoinFactoryTests -->
      <class name="vendingMachine.ProductFactoryTests">
        <test-method status="PASS" signature="verify_createSoda_creates_soda_product()" name="verify_createSoda_creates_soda_product" duration-ms="2" started-at="2021-06-26T11:08:52 BST" finished-at="2021-06-26T11:08:52 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_createSoda_creates_soda_product -->
        <test-method status="PASS" signature="verify_createCoke_creates_coke_product()" name="verify_createCoke_creates_coke_product" duration-ms="2" started-at="2021-06-26T11:08:52 BST" finished-at="2021-06-26T11:08:52 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_createCoke_creates_coke_product -->
        <test-method status="PASS" signature="verify_createPepsi_creates_pepsi_product()" name="verify_createPepsi_creates_pepsi_product" duration-ms="2" started-at="2021-06-26T11:08:52 BST" finished-at="2021-06-26T11:08:52 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_createPepsi_creates_pepsi_product -->
      </class> <!-- vendingMachine.ProductFactoryTests -->
      <class name="cityBikes.CityBikeTests">
        <test-method status="PASS" signature="verify_that_top_level_fields_can_be_filtered_by_queryparms()" name="verify_that_top_level_fields_can_be_filtered_by_queryparms" duration-ms="4334" started-at="2021-06-26T11:08:44 BST" finished-at="2021-06-26T11:08:48 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_that_top_level_fields_can_be_filtered_by_queryparms -->
        <test-method status="PASS" signature="verify_that_frankfurt_is_in_germany()" name="verify_that_frankfurt_is_in_germany" duration-ms="6202" started-at="2021-06-26T11:08:44 BST" finished-at="2021-06-26T11:08:50 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_that_frankfurt_is_in_germany -->
        <test-method status="PASS" signature="baseUriReturnsSuccess()" name="baseUriReturnsSuccess" duration-ms="4668" started-at="2021-06-26T11:08:44 BST" finished-at="2021-06-26T11:08:49 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseUriReturnsSuccess -->
        <test-method status="PASS" signature="verify_that_invalid_id_returns_not_found()" name="verify_that_invalid_id_returns_not_found" duration-ms="6258" started-at="2021-06-26T11:08:44 BST" finished-at="2021-06-26T11:08:50 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_that_invalid_id_returns_not_found -->
      </class> <!-- cityBikes.CityBikeTests -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
